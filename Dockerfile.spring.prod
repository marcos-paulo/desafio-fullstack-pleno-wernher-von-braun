# Use a imagem do Maven para construir a aplicação
FROM maven:3.8.5-openjdk-17 AS build

# Copie apenas o arquivo pom.xml e baixe as dependências do Maven
COPY './iot-manager-api/pom.xml' /usr/src/app/
WORKDIR /usr/src/app
RUN mvn dependency:go-offline

# Agora copie o código-fonte para o contêiner
COPY "./iot-manager-api/src" /usr/src/app/src

# Navegue até o diretório da aplicação
WORKDIR /usr/src/app

# Compile o projeto e crie o arquivo JAR
RUN mvn clean package

# Extraia a versão do pom.xml e construa o projeto
RUN APP_VERSION=$(sed -n 's/.*<version>\([^<]*\)<\/version>.*/\1/p' pom.xml | xargs | awk '{print $2}') && \
  mvn clean package && \
  ls -al > versions.txt && \
  mkdir -p /app && \
  cp "/usr/src/app/target/iot-manager-api-${APP_VERSION}.jar" "/app/iot-manager-api-${APP_VERSION}.jar" 

# # Use o comando sed para extrair a versão do pom.xml e atribuí-la a uma variável de ambiente

ENTRYPOINT [ "/bin/bash" ]
# FROM alpine:3.14

# Use uma imagem do JDK para a execução da aplicação
FROM openjdk:17-jdk-slim

# # # Copie o arquivo JAR compilado do estágio anterior
COPY --from=build /app/*.jar /usr/app/

# encontrar o primeiro arquivo jar no diretório e executá-lo
ENTRYPOINT ["sh", "-c", "java -jar /usr/app/*.jar"]


version: "3.8"

services:
  prod_db:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: db-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    volumes:
      - db_data:/var/lib/mysql

  prod_spring_boot_app:
    build:
      context: .
      dockerfile: Dockerfile.spring.prod
    container_name: spring-boot-app
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - prod_db

  prod_angular_app:
    build:
      context: .
      dockerfile: Dockerfile.angular.prod
    container_name: angular-app
    ports:
      - "8081:80"
    depends_on:
      - prod_spring_boot_app

volumes:
  db_data:
